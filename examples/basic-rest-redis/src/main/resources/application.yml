server:
  port: 8083

spring:
  application:
    name: basic-rest-redis

# Framework Redis Configuration
framework:
  redis:
    mode: standalone  # standalone or cluster
    standalone:
      host: localhost
      port: 6379
    database: 0
    timeout: 2000ms
    pool:
      max-total: 10
      max-idle: 8
      min-idle: 2
      max-wait: 3000ms

# Framework Configuration
framework-config:
  connectors:
    rest:
      enabled: true
      base-path: "/api/v1"
      endpoints:
        - path: "/redis/create"
          method: POST
          domain-logic: "redis-create"
          description: "Create new data in Redis"
        - path: "/redis/read"
          method: POST
          domain-logic: "redis-read"
          description: "Read data from Redis"
        - path: "/redis/update"
          method: PUT
          domain-logic: "redis-update"
          description: "Update existing data in Redis"
        - path: "/redis/delete"
          method: DELETE
          domain-logic: "redis-delete"
          description: "Delete data from Redis"
        - path: "/redis/{id}"
          method: GET
          domain-logic: "redis-read"
          description: "Get single item by ID"
          transform-path-to-body: true
        - path: "/redis/category/{category}"
          method: GET
          domain-logic: "redis-read"
          description: "Get items by category"
          transform-path-to-body: true

# Logging Configuration
logging:
  level:
    blog.eric231.examples.basicrestredis: INFO
    blog.eric231.framework: INFO
    org.springframework.data.redis: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,redis
  endpoint:
    health:
      show-details: always
  info:
    git:
      mode: full