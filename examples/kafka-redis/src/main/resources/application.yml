spring:
  application:
    name: kafka-redis-example
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: kafka-redis-example-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true
      auto-commit-interval: 1000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

# Redis configuration
redis:
  host: localhost
  port: 6379
  database: 0
  password: ""

# Framework configuration
framework:
  application:
    name: kafka-redis-example
  
  # Enable Kafka connector
  kafka:
    enabled: true
    topics:
      - name: test-messages
        domain-logic: kafka-redis.message-processing
      - name: user-events
        domain-logic: kafka-redis.message-processing
    consumer:
      group-id: ${spring.kafka.consumer.group-id}
      max-poll-records: 500
      auto-offset-reset: ${spring.kafka.consumer.auto-offset-reset}
      enable-auto-commit: ${spring.kafka.consumer.enable-auto-commit}
      auto-commit-interval-ms: ${spring.kafka.consumer.auto-commit-interval}

# Logging configuration
logging:
  level:
    blog.eric231.framework: INFO
    blog.eric231.examples.kafkaredis: DEBUG
    org.springframework.kafka: INFO
    org.springframework.data.redis: INFO
